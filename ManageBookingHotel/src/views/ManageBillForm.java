/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import com.itextpdf.text.Document;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import controller.BillController;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Bill;
import model.LoadUserName;

/**
 *
 * @author Văn Bảo
 */
public class ManageBillForm extends javax.swing.JFrame {

    /**
     * Creates new form ManageBillForm
     */
    public ManageBillForm() {
        initComponents();
        this.setLocationRelativeTo(null);
        showTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_bill = new javax.swing.JTable();
        jButton_delete = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jTextField_search = new javax.swing.JTextField();
        jButton_search = new javax.swing.JButton();
        jButton_print_bill = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel_Close = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jTable_bill.setAutoCreateRowSorter(true);
        jTable_bill.setBackground(new java.awt.Color(255, 255, 255));
        jTable_bill.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable_bill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Họ tên khách ", "Số điện thoại", "Mail", "Số phòng", "Ngày nhận", "Ngày trả", "Đơn giá", "Phí dịch vụ", "Giảm giá (%)", "Tổng giá", "Người tạo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_bill.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable_bill.setGridColor(new java.awt.Color(255, 255, 255));
        jTable_bill.setRowHeight(40);
        jTable_bill.setSelectionBackground(new java.awt.Color(0, 102, 255));
        jTable_bill.setVerifyInputWhenFocusTarget(false);
        jScrollPane1.setViewportView(jTable_bill);

        jButton_delete.setBackground(new java.awt.Color(242, 38, 19));
        jButton_delete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_delete.setForeground(new java.awt.Color(255, 255, 255));
        jButton_delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/delete.png"))); // NOI18N
        jButton_delete.setText("Xóa");
        jButton_delete.setPreferredSize(new java.awt.Dimension(106, 23));
        jButton_delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_deleteMouseClicked(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 204, 51));
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/gg-circle.png"))); // NOI18N
        jLabel13.setText("Hotel");
        jLabel13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jTextField_search.setBackground(new java.awt.Color(255, 255, 255));
        jTextField_search.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField_search.setToolTipText("Tên, SDT, mail...");
        jTextField_search.setDoubleBuffered(true);
        jTextField_search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField_searchMouseClicked(evt);
            }
        });

        jButton_search.setBackground(new java.awt.Color(255, 255, 255));
        jButton_search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search.png"))); // NOI18N
        jButton_search.setText("Tìm");
        jButton_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_searchActionPerformed(evt);
            }
        });

        jButton_print_bill.setBackground(new java.awt.Color(153, 153, 0));
        jButton_print_bill.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_print_bill.setForeground(new java.awt.Color(255, 255, 255));
        jButton_print_bill.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/bill.png"))); // NOI18N
        jButton_print_bill.setText("In hóa đơn");
        jButton_print_bill.setPreferredSize(new java.awt.Dimension(106, 23));
        jButton_print_bill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_print_billMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField_search, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_search))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGap(74, 74, 74)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1144, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(45, 45, 45)
                            .addComponent(jButton_print_bill, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(68, 68, 68))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField_search, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_print_bill, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69))
        );

        jPanel2.setBackground(new java.awt.Color(0, 204, 255));

        jLabel_Close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/close.png"))); // NOI18N
        jLabel_Close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_CloseMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel_Close)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel_Close)
                .addGap(11, 11, 11))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    public void showTable(){
        BillController billC = new BillController();
        jTable_bill.setModel(new DefaultTableModel(null, new Object[]{"Id", "Họ tên khách", "Số điện thoại", "Mail","Số phòng", "Ngày nhận", "Ngày trả", "Đơn giá", "Phí dịch vụ", "Giảm giá (%)", "Tổng giá", "Người thêm"}));
        DefaultTableModel tableModel = (DefaultTableModel) jTable_bill.getModel();
        List<Bill> list = billC.allBill();
        
        for (int i = 0; i < list.size(); i++) {
            Bill bill = (Bill)list.get(i);
            Vector row = new Vector();
            row.add(bill.getId_bill());
            row.add(bill.getFullname_client());
            row.add(bill.getPhone_client());
            row.add(bill.getMail());
            row.add(bill.getRoom_number());
            row.add(bill.getDate_in());
            row.add(bill.getDate_out());
            row.add(bill.getPrice_unit());
            row.add(bill.getService_charge());
            row.add(bill.getDiscount_price());
            row.add(bill.getPrice_total());
            row.add(bill.getAdd_by());
            tableModel.addRow(row);
        }
    }
    
    
    
    
    
    private void jButton_deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_deleteMouseClicked

        LoadUserName user = new LoadUserName();
        String by_user = user.getUser_name();
        if(by_user.equals("admin")){
            DefaultTableModel model = (DefaultTableModel)jTable_bill.getModel();
            int rowIndex = jTable_bill.getSelectedRow();
            int id_bill = Integer.parseInt(model.getValueAt(rowIndex,0).toString());

            if(rowIndex >= 0){
                BillController.delete(id_bill);
                showTable(); 
                JOptionPane.showMessageDialog(rootPane, "Xóa hóa đơn thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(rootPane, "Vui lòng chọn phòng cần xóa!", "Lỗi", JOptionPane.WARNING_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "Bạn không được sự cho phép của admin!", "Lỗi", JOptionPane.WARNING_MESSAGE);
            jButton_delete.setEnabled(false);
        }
        
    }//GEN-LAST:event_jButton_deleteMouseClicked

    private void jTextField_searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField_searchMouseClicked
        
    }//GEN-LAST:event_jTextField_searchMouseClicked

    private void jButton_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_searchActionPerformed

        if(jTextField_search.getText().equals("")){
            showTable();
        }
        else{
            if(jTextField_search.getText().length()>0){
                String fullname_client = jTextField_search.getText();
                String phone_client = jTextField_search.getText();
                String mail = jTextField_search.getText();
                BillController billC = new BillController();
                jTable_bill.setModel(new DefaultTableModel(null, new Object[]{"Id", "Họ tên khách", "Số điện thoại", "Mail","Số phòng", "Ngày nhận phòng", "Ngày trả phòng", "Đơn giá", "Tổng giá","Phí dịch vụ", "Người thêm"}));
                DefaultTableModel tableModel = (DefaultTableModel) jTable_bill.getModel();
                List<Bill> list = billC.search(fullname_client, phone_client, mail);
                if(list.size() == 0){
                    JOptionPane.showMessageDialog(rootPane, "Không tìm thấy!", "Tìm kiếm", JOptionPane.OK_OPTION);
                    showTable();
                    jTextField_search.setText("");
                }else{
                    for (int i = 0; i < list.size(); i++) {
                    Bill bill = (Bill)list.get(i);
                        Vector row = new Vector();
                        row.add(bill.getId_bill());
                        row.add(bill.getFullname_client());
                        row.add(bill.getPhone_client());
                        row.add(bill.getMail());
                        row.add(bill.getRoom_number());
                        row.add(bill.getDate_in());
                        row.add(bill.getDate_out());
                        row.add(bill.getPrice_unit());
                        row.add(bill.getService_charge());
                        row.add(bill.getPrice_total());
                        row.add(bill.getAdd_by());
                        tableModel.addRow(row);
                    }
                    jTextField_search.setText("");
                }
            }else{
                JOptionPane.showMessageDialog(rootPane, "Không tìm thấy!", "Tìm kiếm", JOptionPane.OK_OPTION);
            }

        }

    }//GEN-LAST:event_jButton_searchActionPerformed

    private void jLabel_CloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_CloseMouseClicked
        this.dispose();
        
    }//GEN-LAST:event_jLabel_CloseMouseClicked

    private void jButton_print_billMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_print_billMouseClicked
        
        int bill_code=0;
        String fullname_client = "";
        String phone = "";
        String mail = "";
        int room_number = 0;
        float price_unit = 0;
        Date date_in = null;
        Date date_out = null;
        float price_total = 0;
        try {
            
            
            //Lấy thông tin bill
            DefaultTableModel model = (DefaultTableModel)jTable_bill.getModel();
            int rowIndex = jTable_bill.getSelectedRow();
            int id_bill = Integer.parseInt(model.getValueAt(rowIndex,0).toString());
            BillController billC = new BillController();
            List<Bill> list = billC.findId(id_bill);
            
            for (int i = 0; i < list.size(); i++) {
                Bill bd = (Bill)list.get(i);
                bill_code = bd.getId_bill();
                fullname_client = bd.getFullname_client();
                phone = bd.getPhone_client();
                mail = bd.getMail();
                room_number = bd.getRoom_number();
                price_unit = bd.getPrice_unit();
                date_in = bd.getDate_in();
                date_out = bd.getDate_out();
                price_total = bd.getPrice_total();
            }

            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream(new File("d://HoaDon.pdf")));
            //open
            document.open();
            
            Font font = new Font();
            font.setStyle(Font.BOLD);
            font.setSize(28);
            document.add(new Paragraph("GG HOTEL", font));
            document.add(new Paragraph("                         BILL                    \n\n", font));
            
            
            Font f1 = new Font();
            f1.setSize(18);
            document.add(new Paragraph("**************************************************************************\n",f1));
            document.add(new Paragraph("                    Code bill:                      HD "+bill_code, f1));
            document.add(new Paragraph("                    Fullname client:            "+fullname_client, f1));
            document.add(new Paragraph("                    Phone number:             "+phone, f1));
            document.add(new Paragraph("                    Gmail:                           "+mail, f1));
            document.add(new Paragraph("                    Room number:              "+room_number, f1));
            document.add(new Paragraph("                    Unit price:                      "+price_unit, f1));
            document.add(new Paragraph("                    Date check in:               "+date_in, f1));
            document.add(new Paragraph("                    Date check out:             "+date_out, f1));
            document.add(new Paragraph("                    Total price:                    "+price_total+" vnd", f1));
            document.add(new Paragraph("\n*************************************************************************",f1));

            Font f = new Font();
            f.setStyle(Font.ITALIC);
            f.setSize(18);
            document.add(new Paragraph("\nThanh you for using the GG hotel, please visit again...", f));

            //close
            document.close();

            
         
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        int a = JOptionPane.showConfirmDialog(null, "Bạn có muốn in hóa đơn?", "Chọn", JOptionPane.YES_NO_OPTION);
        if(a==0){
            try {
                File file = new File("D:\\HOADON.pdf");
                if(file.exists()){
                    //Process p = Runtime.getRuntime().exec("D:\\HOADON.pdf");
                    if(Desktop.isDesktopSupported()){
                        Desktop.getDesktop().open(file);
                    }
                }
                else{
                    System.out.println("Không thể đóng file!");
                }
            } catch (Exception e) {
                JOptionPane.showConfirmDialog(null, e);
            }
        }
    }//GEN-LAST:event_jButton_print_billMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageBillForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageBillForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageBillForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageBillForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageBillForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_delete;
    private javax.swing.JButton jButton_print_bill;
    private javax.swing.JButton jButton_search;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel_Close;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_bill;
    private javax.swing.JTextField jTextField_search;
    // End of variables declaration//GEN-END:variables
}
